<?php

require_once("../backend/snipaMaprsid.php");
require_once("../backend/snipaMapGenes.php");
require_once("../backend/snipaTabix.php");
require_once("../backend/snipaConfig.php");


$Rel = $_POST['rel'];
$Pop = $_POST['pop'];
$Annorel = $_POST['annorel'];
$SnpsInputType = $_POST['snps_input_type'];
$SnpsSentinel = $_POST['snps_sentinel'];
$SnpsSentinelLd = $_POST['rsquare'];
$SnpsGene = $_POST['snps_gene'];
$SnpsRegionChr = $_POST['snps_region_chr'];
$SnpsRegionBegin = $_POST['snps_region_begin'];
$SnpsRegionEnd = $_POST['snps_region_end'];

$starttime = time(); 
$allok = TRUE;

$JobId =  preg_replace( '/[^0-9]/', '', $_POST['id']);
if (strlen($JobId) != 15) { $allok = FALSE; }

// generiere Verzeichnisse für temporäre Dateien
if ($allok) {
	$tmpdatadir = "tmpdata";
	$serverdir = "/home/metabolomics/snipa/web/";
	$JobDir = $serverdir."/".$tmpdatadir."/".$JobId;
	if (!file_exists($JobDir)) {
		$allok = FALSE;
	}
}


// Array zum speichern des Skriptstatuses für jquery-Abfrage
$status = array();
$status['stepnum'] = 0;
$status['totalstepnum'] = 6;
$status['message'] = "";
$status['errmessage'] = "";
$status['ok'] = "";

function savePlotStatus($statusarray, $filename) {
	$statfilefh = fopen($filename.".1",'w');
	fwrite($statfilefh, utf8_encode(json_encode($statusarray)));
	fclose($statfilefh);
	copy($filename.".1",$filename); 
}


// Sanity Check für alle Sentinel-Eingabeoptionen
if ($allok) {
	$status['stepnum'] = $status['stepnum']+1;
	$status['message'] = "Check format of input data.";
	$status['ok'] = "";
	$status['errmessage'] = "";
	savePlotStatus($status,$JobDir."/status.txt");

	// einzelne SNPs
	if ($SnpsInputType == "snps") {
		// speichere SNPs im Array, lösche nicht-"rs" Zeilen
		$SnpsSentinel = trim($SnpsSentinel);
		if (!(preg_match("/^rs[0-9]+/",$SnpsSentinel)))
		{
			$status['ok'] = "FAIL";
			$status['errmessage'] = "Check the syntax of your SNP and make sure that it is a valid rs identifier.";
			$allok = FALSE;
		} else {
			$status['ok'] = "OK";
		}
	}  	
	
	// Ensembl Gene Identifier
	if ($SnpsInputType == "gene") {
		$SnpsGene = strtoupper(trim($SnpsGene));
		preg_replace('/\s+/','',$proxySnpsGene);
		if ((strlen($SnpsGene) == 0) || !(preg_match("/^ENSG[0-9]+/",$SnpsGene))) {
			$status['ok'] = "FAIL";
			$status['errmessage'] = "You have to enter a valid ENSEMBL gene identifier.";
			$allok = FALSE;
		} elseif (!(snipaGeneExists($Annorel,$SnpsGene))) { // Gibt es den Identifier in der DB?
			$status['ok'] = "FAIL";
			$status['errmessage'] = "The ENSEMBL gene identifier ".$SnpsGene." is not in the annotation release &quot;".$Annorel."&quot;.";
			$allok = FALSE;
		} else {
			$status['ok'] = "OK";
		}
	}  

	if ($SnpsInputType == "region") {
		preg_replace( '/[^0-9]/', '',$SnpsRegionBegin);
		preg_replace( '/[^0-9]/', '',$SnpsRegionEnd);
		
		if ((strlen($SnpsRegionBegin) == 0) || (strlen($SnpsRegionEnd) == 0)){
			$status['ok'] = "FAIL";
			$status['errmessage'] = "Please provide both begin and end position of the chromosomal region.";
			$allok = FALSE;
		} elseif ($SnpsRegionBegin > $SnpsRegionEnd) {
			$status['ok'] = "FAIL";
			$status['errmessage'] = "Begin position must be equal or less than the end position.";
			$allok = FALSE;
		} elseif ($SnpsRegionEnd-$SnpsRegionBegin > 1000000) {
			$status['ok'] = "FAIL";
			$status['errmessage'] = "Maximum allowed distance between begin and end position is 1,000,000 bp.";
			$allok = FALSE;
		} else {
			$status['ok'] = "OK";
		}
	}  
	savePlotStatus($status,$JobDir."/status.txt");
}



// Hole Positionen für alle sentinel SNPs
if ($allok) {
	$status['stepnum'] = $status['stepnum']+1;
	$status['message'] = "Determine genetic positions.";
	$status['ok'] = "";
	$status['errmessage'] = "";
	savePlotStatus($status,$JobDir."/status.txt");
	$PlotThis = array();
	
	// einzelne SNPs
	if ($SnpsInputType == "snps") {
		$tmp = snipaMapRsid($Rel,$Pop,$SnpsSentinel);
		$PlotThis = array('CHR' => $tmp['CHR'], 'BEGIN' => $tmp['POS'], 'END' => $tmp['POS']);
		unset($tmp);
	}  	

	// Ensembl Gene Identifier
	if ($SnpsInputType == "gene") {
		$tmp = snipaGeneLocation($Annorel,$SnpsGene);
		$PlotThis = array('CHR' => $tmp[0]['CHR'], 'BEGIN' => $tmp[0]['START'], 'END' => $tmp[0]['STOP']);
		unset($tmp);
	}  

	// Chromosomale Region
	if ($SnpsInputType == "region") {
		$PlotThis = array("CHR" => $SnpsRegionChr, "BEGIN" => $SnpsRegionBegin, "END" => $SnpsRegionEnd);
	} 
	
	if ($PlotThis['CHR'] == "" | $PlotThis['BEGIN'] == "" | $PlotThis['END'] == "") {
		$status['ok'] = "FAIL";
		if ($SnpsInputType == "snps") {	$status['errmessage'] = "The SNP you entered was not found in the selected release or population. Please check your input data."; }
		if ($SnpsInputType == "gene") {	$status['errmessage'] = "The gene you entered was not found in the selected annotation release. Please check your input data."; }
		if ($SnpsInputType == "region") {	$status['errmessage'] = "There was an error with the chromosomal position you've provided. Please check your input data."; }
		$allok = FALSE;
	} else {
		$status['ok'] = "OK";
	}
	savePlotStatus($status,$JobDir."/status.txt");
}


// Grundlegende Annotation aus Tabix laden
if ($allok) {
	$status['stepnum'] = $status['stepnum']+1;
	$status['message'] = "Get basic SNP annotations.";
	$status['ok'] = "";
	$status['errmessage'] = "";
	savePlotStatus($status,$JobDir."/status.txt");

	$snps = array();
	
	$TabixFields = array("RSID","MAJOR","MINOR","MAF","CMMB","CM");
	if ($SnpsInputType == "snps") { 
		$Tabix = snipaGetProxies($Rel,$Pop,$PlotThis['CHR'],$PlotThis['BEGIN'],"","",$SnpsSentinelLd); 
		// Bestimme minimale und maximale Position im LD Block
		foreach($Tabix as $tmp) {
			if ($tmp['POS2'] < $PlotThis['BEGIN']) { $PlotThis['BEGIN'] = $tmp['POS2']; }
			if ($tmp['POS2'] > $PlotThis['END']) { $PlotThis['END'] = $tmp['POS2']; }
		}
		unset($tmp);
	}
	
	if ($SnpsInputType == "gene" || $SnpsInputType == "region") { 
		$Tabix = snipaGetSelfinfo($Rel,$Pop,$PlotThis['CHR'],$PlotThis['BEGIN'],$PlotThis['END']); 
	}
	
	foreach($Tabix as $entry) {
		$snps[$entry['POS2']] = array("RSID" => $entry['RSID']);
	}
	
	//file_put_contents($JobDir."/snp_noanno.tmp",print_r($snps,TRUE));
}


// Erweiterte Annotation laden und mit Tabix-Output mergen
if ($allok) {
	$status['stepnum'] = $status['stepnum']+1;
	$status['message'] = "Get advanced SNP annotations.";
	$status['ok'] = "";
	$status['errmessage'] = "";
	savePlotStatus($status,$JobDir."/status.txt");

	$Tabix = snipaGetSNPAnnotations($Annorel,$PlotThis['CHR'],$PlotThis['BEGIN'],$PlotThis['END']);
	
	foreach($Tabix as $entry) {
		if (array_key_exists($entry['POS'],$snps)) {
			$tmprs = $snps[$entry['POS']]['RSID'];
			$snps[$entry['POS']] = array_merge(array("RSID" => $tmprs),unserialize($entry['PHPARRAY']));
		}
	}
}

// Schreiben der Block-Annotation über Hilfsfunktion
if ($allok) {
	$status['stepnum'] = $status['stepnum']+1;
	$status['message'] = "bullshit";
	$status['ok'] = "";
	$status['errmessage'] = "";
	savePlotStatus($status,$JobDir."/status.txt");
	
	file_put_contents($JobDir."/block_anno.html",printAnno($snps));
}

// Fertig
if ($allok) {
	$status['stepnum'] = $status['stepnum']+1;
	$status['message'] = "Finished.";
	$status['ok'] = "";
	$status['errmessage'] = "";
	$status['ok'] = "OK";
	savePlotStatus($status,$JobDir."/status.txt");
}


print(utf8_encode(json_encode($status)));

?>

<?php
// Globale Hilfsvariable zum Speichern der Block-Annotation
$txt = "";
// Hilfsfunktion für das Schreiben der Block-Annotation
function printAnno($snparray){
	global $txt, $PlotThis;
	$txt = "";
	add("<div id='snpinfo-accordion' class='ui-accordion ui-widget ui-helper-reset' role='tablist'>");
	add("<h3 id='ui-accordion-snpinfo-accordion-header-0' class='ui-accordion-header ui-helper-reset ui-state-default ui-accordion-header-active ui-state-active ui-corner-top ui-accordion-icons' role='tab' aria-controls='ui-accordion-snpinfo-accordion-panel-0' aria-selected='true' tabindex='0'>chr".$PlotThis['CHR'].":".number_format(min(array_keys($snparray)))."-".number_format(max(array_keys($snparray)))."</h3>");
	add("<div id='ui-accordion-snpinfo-accordion-panel-0' class='ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content-active' style='display: block;' aria-labelledby='ui-accordion-snpinfo-accordion-header-0' role='tabpanel' aria-expanded='true' aria-hidden='false'>");
	add("<div class='annotation-section'>");
	add("<h2 class='efftype'>Block annotations</h2>");
	add("<table class='annotation top'><tr><th class='snpinf' colspan='2'>Block info</th></tr><tr><th>genomic range</th><td>chr".$PlotThis['CHR'].":".number_format(min(array_keys($snparray)))."-".number_format(max(array_keys($snparray)))."  <a href='http://www.ensembl.org/Homo_sapiens/Location/View?db=core;r=".$PlotThis['CHR'].":".min(array_keys($snparray))."-".max(array_keys($snparray))."' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='region @ EnsEMBL' /></a></td></tr><tr><th>block size</th><td>".number_format(max(array_keys($snparray))-min(array_keys($snparray)))." bp</td></tr><tr><th>variant count</th><td>".count($snparray)." variants</td></tr></table><br/>");
	$total = array();
	foreach($snparray as $key => $varr){
		// reformat pubmed-ids for array_merge_recursive to do what i want it to do
		if(array_key_exists('variant_association', $varr)){
			foreach($varr['variant_association'] as $study => $sarr){
				foreach($sarr as $id => $entry){
					if(is_numeric($id)){
						$varr['variant_association'][$study]["pmid".$id] = $varr['variant_association'][$study][$id];
						unset($varr['variant_association'][$study][$id]);
					}
				}
			}
		}
		$total = array_merge_recursive($total, $varr);
	}
	foreach($total['score'] as $key => $varr){
		$total['score'][$key] = "&mu; = ".sprintf("%.3f", mean($varr))." [".min($varr)." &ndash; ".max($varr)."]";
	}
	$total = super_unique($total);
	$total = shrink($total);
	// re-establish pubmed-ids
	if(array_key_exists('variant_association', $total)){
		foreach($total['variant_association'] as $study => $sarr){
			foreach($sarr as $id => $entry){
				if(preg_match('/pmid\d+/',$id)){
					$total['variant_association'][$study][(preg_replace('/pmid(\d+)$/', '$1',$id))] = $total['variant_association'][$study][$id];
					unset($total['variant_association'][$study][$id]);
				}
			}
		}
	}
	annotate($total);
	
	// Insert for debugging:
	
	add("<pre>");
	add(print_r($total,TRUE));
	add("</pre>");
	
	add("</div></div>");
	return $txt;
}
// Hilfsfunktion für Mean-Berechnung
function mean($arr){
    if (!count($arr)) return 0;
    $sum = 0;
    for ($i = 0; $i < count($arr); $i++){
        $sum += $arr[$i];
    }

    return $sum / count($arr);
}
// Hilfsfunktion für array shrinkage
function shrink($array){
	foreach($array as $key => $value){
		if(is_array($value) && count($value) == 1 && array_key_exists("0", $value)){
			$array[$key] = $value[0];
		}else{
			$array[$key] = shrink($array[$key]);
		}
	}
	return $array;
}
// Hilfsfunktion für Multi-level-unified array
function super_unique($array){
	$result = array_map("unserialize", array_unique(array_map("serialize", $array)));

	foreach ($result as $key => $value){
		if ( is_array($value) ){
			$result[$key] = super_unique($value);
		}
	}
	return $result;
}
// Hilfsfunktion (print-Ersatz) für die Erstellung der Block-Annotation
function add($mixed_var){
	global $txt;
	$txt = $txt."\n".$mixed_var;
}
// Hilfsfunktion um nach Genen zu sortieren
function sortByGene($a, $b){
	return (($a['gene_symbol'] < $b['gene_symbol']) ? -1 : 1);
}
function sortGeneList($a, $b){
	return (($a[0] < $b[0]) ? -1 : 1);
}
// Adaptierte Annotation-Style-Funktion aus snipaRAPlotsAnnotations.php
function annotate($functional){
	
	add("<table class='annotation'>
<tr><th class='duper' colspan='4'>Basic features</th></tr>
<tr><th class='super' colspan='2'>Conservation/deleteriousness</th><th class='super' colspan='2'>Linked genes</th></tr>
<tr><th>phyloP</th><td>{$functional['score']['phyloP']}</td><th>gene(s) hit or close-by</th><td>");
	if(array_key_exists('genes', $functional)){
		asort($functional['genes']);
		$tmp = array();
		foreach($functional['genes'] as $key => $value){
			array_push($tmp, "{$functional['genes'][$key]} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$key}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$functional['genes'][$key]} @ EnsEMBL' /></a>");
		}
		add(join(", ", $tmp));
	}else{
		add("&ndash;");
	}
	add("</td></tr>
	<tr><th>phastCons</th><td>{$functional['score']['phastCons']}</td><th>eQTL gene(s)</th><td>");
	if(array_key_exists('eQTL-genes', $functional)){
		asort($functional['eQTL-genes']);
		$tmp = array();
		foreach($functional['eQTL-genes'] as $key => $value){
			array_push($tmp, "{$functional['eQTL-genes'][$key]} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$key}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$functional['eQTL-genes'][$key]} @ EnsEMBL' /></a>");
		}
		add(join(", ", $tmp));
	}else{
		add("&ndash;");
	}
	add("</td></tr>
	<tr><th>GERP++</th><td>{$functional['score']['GERP++']}</td><th>potentially regulated gene(s)</th><td>");
	if(array_key_exists('reg_genes', $functional)){
		asort($functional['reg_genes']);
		$tmp = array();
		foreach($functional['reg_genes'] as $key => $value){
			array_push($tmp, "{$functional['reg_genes'][$key]} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$key}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$functional['reg_genes'][$key]} @ EnsEMBL' /></a>");
		}
		add(join(", ", $tmp));
	}else{
		add("&ndash;");
	}
	add("</td></tr>
	<tr><th>CADD score</th><td>{$functional['score']['CADD']}</td><th>disease gene(s)</th><td>");
	if(array_key_exists('gene_associations', $functional)){
		$tmp = array();
		foreach($functional['gene_associations'] as $source => $genes){
			foreach($genes as $key => $value){
				foreach($value as $trait => $info){
					$tmp["{$info['gene_symbol']} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$key}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$info['gene_symbol']} @ EnsEMBL' /></a>"] = 1;
				}
			}
		}
		add(join(", ", array_keys($tmp)));
	}else{
		add("&ndash;");
	}
	add("</td></tr>
	</table><br/>");

	add("</div>");
		
	/**
	 * Disease Annotations
	 */
	if(array_key_exists('gene_associations', $functional) || array_key_exists('variant_association', $functional)){
		add("<div class='annotation-section'>");
		add("<h2 class='efftype'>Trait annotations</h2>");
			
		if(array_key_exists('variant_association', $functional)){

			// associations
			if(array_key_exists('gwascatalog_variants', $functional['variant_association']) || array_key_exists('metabolomics_variants', $functional['variant_association']) || array_key_exists('dbgap_variants', $functional['variant_association'])){
				add("<table class='annotation'>
				<tr><th class='duper' colspan='5'>Variant association</th></tr>
				<tr><th class='super'>trait</th><th class='super'>min(p-value)</th><th class='super'>source DB</th><th class='super' colspan='2'>source entry/link</th></tr>");
			
			
				// GWAS Catalog
				if(array_key_exists('gwascatalog_variants', $functional['variant_association'])){
					$temp = $functional['variant_association']['gwascatalog_variants'];
					krsort($temp);
					foreach($temp as $key => $value){
						foreach($value as $trait => $tarr){
							add(sprintf("<tr><td>$trait</td><td>&lt;".preg_replace('/([\d\.]+)e\-(\d+)/','\1&times;10<sup>-%d</sup>',minimum($tarr['P-value']))."</td><td><a class='web' href='{$tarr['source_link']}' target='_blank'>{$tarr['source']}</a></td><td>{$tarr['external_id']}</td><td><a href='{$tarr['link']}' target='_blank'><img src='frontend/img/pm.png' alt='PubMed' title='view in PubMed' /></a></td></tr>", preg_replace('/([\d\.]+)e\-(\d+)/','\2',minimum($tarr['P-value']))));
						}
					}
				}
				
				// Metabolomics GWAS Server
				if(array_key_exists('metabolomics_variants', $functional['variant_association'])){
					$temp = $functional['variant_association']['metabolomics_variants'];
					krsort($temp);
					foreach($temp as $key => $value){
						foreach($value as $trait => $tarr){
							add(sprintf("<tr><td>$trait</td><td>".preg_replace('/([\d\.]+)e\-(\d+)/','\1&times;10<sup>-%d</sup>',minimum($tarr['P-value']))."</td><td><a class='web' href='{$tarr['source_link']}' target='_blank'>{$tarr['source']}</a></td><td>{$tarr['external_id']}</td><td><a href='{$tarr['link']}' target='_blank'><img src='frontend/img/pm.png' alt='PubMed' title='view in PubMed' /></a></td></tr>", preg_replace('/([\d\.]+)e\-(\d+)/','\2',minimum($tarr['P-value']))));
						}
					}
				}
				
				// dbGaP
				if(array_key_exists('dbgap_variants', $functional['variant_association'])){
					$temp = $functional['variant_association']['dbgap_variants'];
					krsort($temp);
					foreach($temp as $key => $value){
						foreach($value as $trait => $tarr){
							add(sprintf("<tr><td>$trait</td><td>".preg_replace('/([\d\.]+)e\-(\d+)/','\1&times;10<sup>-%d</sup>',minimum($tarr['P-value']))."</td><td><a class='web' href='{$tarr['source_link']}' target='_blank'>{$tarr['source']}</a></td><td>{$tarr['external_id']}</td><td><a href='{$tarr['link']}' target='_blank'><img src='frontend/img/dbgap.png' alt='dbGaP' title='view in dbGaP' /></a></td></tr>", preg_replace('/([\d\.]+)e\-(\d+)/','\2',minimum($tarr['P-value']))));
						}
					}
				}
				add("</table><br/>");
			} // end associations
			
			// annotations
			if(array_key_exists('clinvar_variants', $functional['variant_association']) || array_key_exists('omim_variants', $functional['variant_association']) || array_key_exists('hgmd_variants', $functional['variant_association']) || array_key_exists('drugbank_fx_variants', $functional['variant_association']) || array_key_exists('drugbank_adr_variants', $functional['variant_association']) || array_key_exists('uniprot_variants', $functional['variant_association'])){
				add("<table class='annotation'>
				<tr><th class='duper' colspan='5'>Variant annotation</th></tr>
				<tr><th class='super'>trait</th><th class='super'>type</th><th class='super'>source DB</th><th class='super' colspan='2'>source entry/link</th></tr>");
			
				// ClinVar
				if(array_key_exists('clinvar_variants', $functional['variant_association'])){
					$temp = $functional['variant_association']['clinvar_variants'];
					krsort($temp);
					foreach($temp as $key => $value){
						foreach($value as $trait => $tarr){
							add("<tr><td>$trait</td><td>{$tarr['Annotated_as']}</td><td><a class='web' href='{$tarr['source_link']}' target='_blank'>{$tarr['source']}</a></td><td>$key</td><td><a href='{$tarr['link']}' target='_blank'><img src='frontend/img/clinvar.png' alt='ClinVar' title='view in ClinVar' /></a></td></tr>");
						}
					}
				}
				// HGMD
				if(array_key_exists('hgmd_variants', $functional['variant_association'])){
					$temp = $functional['variant_association']['hgmd_variants'];
					krsort($temp);
					foreach($temp as $key => $value){
						foreach($value as $trait => $tarr){
							add("<tr><td>$trait</td><td>{$tarr['type']}</td><td><a class='web' href='{$tarr['source_link']}' target='_blank'>{$tarr['source']}</a></td><td>$key</td><td><a href='{$tarr['link']}' target='_blank'><img src='frontend/img/hgmd.png' alt='HGMD' title='view in HGMD public' /></a></td></tr>");
						}
					}
				}
				// OMIM
				if(array_key_exists('omim_variants', $functional['variant_association'])){
					$temp = $functional['variant_association']['omim_variants'];
					krsort($temp);
					foreach($temp as $key => $value){
						foreach($value as $trait => $tarr){
							add("<tr><td>$trait</td><td>{$tarr['type']}</td><td><a class='web' href='{$tarr['source_link']}' target='_blank'>{$tarr['source']}</a></td><td>".preg_replace('/\s\(.+$/', '', $key)."</td><td><a href='{$tarr['link']}' target='_blank'><img src='frontend/img/omim.png' alt='OMIM' title='view in OMIM' /></a></td></tr>");
						}
					}
				}
				// UniProt
				if(array_key_exists('uniprot_variants', $functional['variant_association'])){
					$temp = $functional['variant_association']['uniprot_variants'];
					krsort($temp);
					foreach($temp as $key => $value){
						foreach($value as $trait => $tarr){
							if(preg_match("/^MIM/",$tarr['external_id'])){
								add("<tr><td>$trait</td><td>{$tarr['type']}</td><td><a class='web' href='{$tarr['source_link']}' target='_blank'>{$tarr['source']}</a></td><td>$key</td><td><a href='{$tarr['link']}' target='_blank'><img src='frontend/img/omim.png' alt='OMIM' title='view in OMIM' /></a></td></tr>");
							}else{
								add("<tr><td>$trait</td><td>{$tarr['type']}</td><td><a class='web' href='{$tarr['source_link']}' target='_blank'>{$tarr['source']}</a></td><td>$key</td><td><a href='{$tarr['link']}' target='_blank'><img src='frontend/img/uniprot.png' alt='UniProt' title='view in UniProt' /></a></td></tr>");
							}
						}
					}
				}
				// DrugBank FX
				if(array_key_exists('drugbank_fx_variants', $functional['variant_association'])){
					$temp = $functional['variant_association']['drugbank_fx_variants'];
					krsort($temp);
					foreach($temp as $key => $value){
						foreach($value as $trait => $tarr){
							add("<tr><td>$trait</td><td>{$tarr['type']}</td><td><a class='web' href='{$tarr['source_link']}' target='_blank'>{$tarr['source']}</a></td><td>$key</td><td><a href='{$tarr['link']}' target='_blank'><img src='frontend/img/pm.png' alt='PubMed' title='view in PubMed' /></a></td></tr>");
						}
					}
				}
				// DrugBank ADR
				if(array_key_exists('drugbank_adr_variants', $functional['variant_association'])){
					$temp = $functional['variant_association']['drugbank_adr_variants'];
					krsort($temp);
					foreach($temp as $key => $value){
						foreach($value as $trait => $tarr){
							add("<tr><td>$trait</td><td>{$tarr['type']}</td><td><a class='web' href='{$tarr['source_link']}' target='_blank'>{$tarr['source']}</a></td><td>$key</td><td><a href='{$tarr['link']}' target='_blank'><img src='frontend/img/pm.png' alt='PubMed' title='view in PubMed' /></a></td></tr>");
						}
					}
				}
				
				add("</table><br/>");
			} // end annotations
		}
		
		// GENES
		if(array_key_exists('gene_associations', $functional)){
			add("<table class='annotation'>
			<tr><th class='duper' colspan='5'>Disease gene annotation</th></tr>
			<tr><th class='super'>gene</th><th class='super'>trait</th><th class='super'>source DB</th><th class='super' colspan='2'>source entry/link</th></tr>");
			foreach($functional['gene_associations'] as $source => $genes){
				foreach($genes as $key => $value){
					foreach($value as $trait => $info){
						$tr = str_replace('@','',$trait);
						if(preg_match("/^MIM/",$info['external_id'])){
							add("<tr><td>{$info['gene_symbol']} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$key}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$info['gene_symbol']} @ EnsEMBL' /></a></td><td>$tr</td><td><a class='web' href='{$info['source_link']}' target='_blank'>{$info['source']}</a></td><td>{$info['external_id']}</td><td><a href='{$info['link']}' target='_blank'><img src='frontend/img/omim.png' alt='OMIM' title='view in OMIM' /></a></td></tr>");
						}else{
							add("<tr><td>{$info['gene_symbol']} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$key}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$info['gene_symbol']} @ EnsEMBL' /></a></td><td>$tr</td><td><a class='web' href='{$info['source_link']}' target='_blank'>{$info['source']}</a></td><td>{$info['external_id']}</td><td><a href='{$info['link']}' target='_blank'><img src='frontend/img/".strtolower($info['source']).".png' alt='{$info['source']}' title='view in {$info['source']}' /></a></td></tr>");
						}
					}
				}
			}
			add("</table><br/>");
		}
		
		add("</div>");
	}

	// direct transcript
	if(array_key_exists('direct_transcript_effect', $functional)){
		uasort($functional['direct_transcript_effect'], 'sortByGene');
		// TODO: add mature mirna & splice site variants
		add("<div class='annotation-section'>");
		add("<h2 class='efftype'>Direct effect on transcript</h2>");
		if($subf = getDTSEffectArray($functional)){
			if(array_key_exists('direct_transcript_effect', $subf)){
				add("<table class='annotation'><tr><th class='duper' colspan='8'>Missense variant</th></tr>
		<tr><th class='super'>gene</th><th class='super'>affected transcript</th><th class='super'>RefSeq id</th><th class='super'>protein</th><th class='super'>amino acid</th><th class='super'>codon</th><th class='super'>SIFT prediction</th><th class='super'>PolyPhen prediction</th></tr>");
				foreach($subf['direct_transcript_effect'] as $key => $value){
					add("<tr>
					<td>{$value['gene_symbol']} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$value['gene_id']}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value['gene_symbol']} @ EnsEMBL' /></a></td>
					<td>{$key} <a href='http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;t={$key}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$key} @ EnsEMBL' /></a></td>
					<td>{$value['refseq']}</td>
					<td>".((array_key_exists('ensp', $value)) ? ("{$value['ensp']}".(($value['ensp'] !== "?") ? " <a href='http://www.ensembl.org/Homo_sapiens/Transcript/ProteinSummary?db=core;t={$value}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value['ensp']} @ EnsEMBL' /></a>" : "" )) : "?"). "</td>
					<td>{$value['amino']}</td>
					<td>{$value['codon']}</td>
					<td>{$value['sift']}</td>
					<td>{$value['polyphen']}</td></tr>");
				}
				add("</table><br/>");
			}
			if(array_key_exists('miRNA', $subf)){
				add("<table class='annotation'><tr><th class='duper' colspan='4'>Mature miRNA variant</th></tr>
		<tr><th class='super'>effect</th><th class='super'>affected transcript</th><th class='super'>RefSeq id</th><th class='super'>gene</th></tr>");
				foreach($subf['miRNA'] as $key => $value){
					add("<tr><td>{$value['effect']}</td><td>{$key} <a href='http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;t={$key}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$key} @ EnsEMBL' /></a></td><td>{$value['refseq']}</td><td>{$value['gene_symbol']} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$value['gene_id']}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value['gene_symbol']} @ EnsEMBL' /></a></td></tr>");
				}
				add("</table><br/>");
			}
			if(array_key_exists('splice', $subf)){
				add("<table class='annotation'><tr><th class='duper' colspan='5'>Splice site variant</th></tr>
		<tr><th class='super'>effect</th><th class='super'>affected transcript</th><th class='super'>RefSeq id</th><th class='super'>gene</th><th class='super'>protein</th></tr>");
				foreach($subf['splice'] as $key => $value){
					add("<tr><td>{$value['effect']}</td><td>{$key} <a href='http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;t={$key}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$key} @ EnsEMBL' /></a></td><td>{$value['refseq']}</td><td>{$value['gene_symbol']} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$value['gene_id']}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value['gene_symbol']} @ EnsEMBL' /></a></td><td>".((array_key_exists('ensp', $value)) ? ("{$value['ensp']}".(($value['ensp'] !== "?") ? " <a href='http://www.ensembl.org/Homo_sapiens/Transcript/ProteinSummary?db=core;t={$value}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value['ensp']} @ EnsEMBL' /></a>" : "" )) : "?"). "</td></tr>");
				}
				add("</table><br/>");
			}
		}
		add("</div>");
	}

	// direct regulatory
	if(array_key_exists('cis-eQTL', $functional) || array_key_exists('trans-eQTL', $functional)){
		add("<div class='annotation-section'>");
		add("<h2 class='efftype'>Direct effect on regulation</h2>");
		
		// cis-eQTL
		if(array_key_exists('cis-eQTL', $functional)){
			add("<table class='annotation'><tr><th class='duper' colspan='6'><i>cis</i>-eQTL</th></tr>
		<tr><th class='super'>gene</th><th class='super'>transcript</th><th class='super'>probe</th><th class='super'>tissue</th><th class='super'>min(statistic) (type)</th><th class='super'>source</th></tr>");
			foreach($functional['cis-eQTL'] as $study => $starr){
							
				foreach($functional['cis-eQTL'][$study] as $key => $value){
					if($key==="link" || $key==="source"){
						continue;
					}
					$tsc = count($value['ProbeData']);
					$tic = count($value['ProbeStats']);
					$rsp = max($tsc, $tic);
					$probestring = "?";
					if($key != "?"){
						$probestring = $key." <a href='http://www.ensembl.org/Homo_sapiens/Location/Genome?fdb=funcgen;ftype=ProbeFeature;id=$key' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='$key @ EnsEMBL' /></a>";
					}
					if($tsc == 0){
						$tirsp = 1;
						$tik = array_keys($value['ProbeStats']);
						add(sprintf("<tr><td rowspan='$rsp'>?</td><td rowspan='$rsp'>?</td><td rowspan='$rsp'>$probestring</td><td rowspan='$tirsp'>{$tik[0]}</td><td rowspan='$tirsp'>".preg_replace('/([\d\.]+)e\-(\d+)/','\1&times;10<sup>-%d</sup>',minimum($value['ProbeStats'][$tik[0]]['stat']))." ({$value['ProbeStats'][$tik[0]]['stattype']})</td><td rowspan=''$rsp'>{$functional['cis-eQTL'][$study]['source']} <a href='{$functional['cis-eQTL'][$study]['link']}' target='_blank'><img src='frontend/img/pm.png' alt='PubMed' title='view in PubMed' /></a></td></tr>", preg_replace('/([\d\.]+)e\-(\d+)/','\2',minimum($value['ProbeStats'][$tik[0]]['stat']))));
						for($i=1; $i<$tic; $i++){
							add(sprintf("<td rowspan='$tirsp'>{$tik[$i]}</td><td rowspan='$tirsp'>".preg_replace('/([\d\.]+)e\-(\d+)/','\1&times;10<sup>-%d</sup>',minimum($value['ProbeStats'][$tik[$i]]['stat']))." ({$value['ProbeStats'][$tik[0]]['stattype']})</td>", preg_replace('/([\d\.]+)e\-(\d+)/','\2',minimum($value['ProbeStats'][$tik[$i]]['stat']))));
						}
					}else{
						$tsrsp = 1;
						$tirsp = 1;
						$tik = array_keys($value['ProbeStats']);
						$tsk = array_keys($value['ProbeData']);
						for($i=0; ($i<$tic || $i<$tsc); $i++){
							add("<tr>");
							if($i<$tsc-1){
								add("<td rowspan='$tsrsp'>{$value['ProbeData'][$tsk[$i]]['gene_symbol']} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$value['ProbeData'][$tsk[$i]]['gene_id']}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value['ProbeData'][$tsk[$i]]['gene_symbol']} @ EnsEMBL' /></a></td><td rowspan='$tsrsp'>{$tsk[$i]} ".(($tsk[$i]=="?") ? "" : "<a href='http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;t={$tsk[$i]}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$tsk[$i]} @ EnsEMBL' /></a>")."</td>");
							}
							if($i==$tsc-1){
								add("<td rowspan='".($rsp-$i)."'>{$value['ProbeData'][$tsk[$i]]['gene_symbol']} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$value['ProbeData'][$tsk[$i]]['gene_id']}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value['ProbeData'][$tsk[$i]]['gene_symbol']} @ EnsEMBL' /></a></td><td rowspan='".($rsp-$i)."'>{$tsk[$i]} ".(($tsk[$i]=="?") ? "" : "<a href='http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;t={$tsk[$i]}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$tsk[$i]} @ EnsEMBL' /></a>")."</td>");
							}
							if($i==0){
								add("<td rowspan='$rsp'>$probestring</td>");
							}
							if($i<$tic-1){
								add(sprintf("<td rowspan='$tirsp'>{$tik[$i]}</td><td rowspan='$tirsp'>".preg_replace('/([\d\.]+)e\-(\d+)/','\1&times;10<sup>-%d</sup>',minimum($value['ProbeStats'][$tik[0]]['stat']))." ({$value['ProbeStats'][$tik[0]]['stattype']})</td><td rowspan='".$tirsp."'>{$functional['cis-eQTL'][$study]['source']} <a href='{$functional['cis-eQTL'][$study]['link']}' target='_blank'><img src='frontend/img/pm.png' alt='PubMed' title='view in PubMed' /></a></td></tr>", preg_replace('/([\d\.]+)e\-(\d+)/','\2',minimum($value['ProbeStats'][$tik[0]]['stat']))));
							}
							if($i==$tic-1){
								add(sprintf("<td rowspan='".($rsp-$i)."'>{$tik[$i]}</td><td rowspan='".($rsp-$i)."'>".preg_replace('/([\d\.]+)e\-(\d+)/','\1&times;10<sup>-%d</sup>',minimum($value['ProbeStats'][$tik[0]]['stat']))." ({$value['ProbeStats'][$tik[0]]['stattype']})</td><td rowspan='".($rsp-$i)."'>{$functional['cis-eQTL'][$study]['source']} <a href='{$functional['cis-eQTL'][$study]['link']}' target='_blank'><img src='frontend/img/pm.png' alt='PubMed' title='view in PubMed' /></a></td></tr>", preg_replace('/([\d\.]+)e\-(\d+)/','\2',minimum($value['ProbeStats'][$tik[0]]['stat']))));
							}
							add("</tr>");
						}
					}
				}
			}
			add("</table><br/>");
		}
		
		// trans-eQTL
		if(array_key_exists('trans-eQTL', $functional)){
			add("<table class='annotation'><tr><th class='duper' colspan='7'><i>trans</i>-eQTL</th></tr>
		<tr><th class='super'>gene</th><th class='super'>transcript</th><th class='super'>probe</th><th class='super'>chromosome</th><th class='super'>tissue</th><th class='super'>min(statistic) (type)</th><th class='super'>source</th></tr>");
			foreach($functional['trans-eQTL'] as $study => $starr){
							
				foreach($functional['trans-eQTL'][$study] as $key => $value){
					if($key==="link" || $key==="source"){
						continue;
					}
					$tsc = count($value['ProbeData']);
					$tic = count($value['ProbeStats']);
					$rsp = max($tsc, $tic);
					$probestring = "?";
					if($key != "?"){
						$probestring = $key." <a href='http://www.ensembl.org/Homo_sapiens/Location/Genome?fdb=funcgen;ftype=ProbeFeature;id=$key' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='$key @ EnsEMBL' /></a>";
					}
					if($tsc == 0){
						$tirsp = 1;
						$tik = array_keys($value['ProbeStats']);
						add(sprintf("<tr><td rowspan='$rsp'>?</td><td rowspan='$rsp'>?</td><td rowspan='$rsp'>$probestring</td><td rowspan='$rsp'>{$value['ProbeStats'][$tik[0]]['chromosome']}</td><td rowspan='$tirsp'>{$tik[0]}</td><td rowspan='$tirsp'>".preg_replace('/([\d\.]+)e\-(\d+)/','\1&times;10<sup>-%d</sup>',minimum($value['ProbeStats'][$tik[0]]['stat']))." ({$value['ProbeStats'][$tik[0]]['stattype']})</td><td rowspan='$rsp'>{$functional['trans-eQTL'][$study]['source']} <a href='{$functional['trans-eQTL'][$study]['link']}' target='_blank'><img src='frontend/img/pm.png' alt='PubMed' title='view in PubMed' /></a></td></tr>", preg_replace('/([\d\.]+)e\-(\d+)/','\2',minimum($value['ProbeStats'][$tik[0]]['stat']))));
						for($i=1; $i<$tic; $i++){
							add(sprintf("<td rowspan='$tirsp'>{$tik[$i]}</td><td rowspan='$tirsp'>".preg_replace('/([\d\.]+)e\-(\d+)/','\1&times;10<sup>-%d</sup>',minimum($value['ProbeStats'][$tik[$i]]['stat']))." ({$value['ProbeStats'][$tik[0]]['stattype']})</td><td rowspan='$rsp'>{$functional['trans-eQTL'][$study]['source']} <a href='{$functional['trans-eQTL'][$study]['link']}' target='_blank'><img src='frontend/img/pm.png' alt='PubMed' title='view in PubMed' /></a></td>", preg_replace('/([\d\.]+)e\-(\d+)/','\2',minimum($value['ProbeStats'][$tik[$i]]['stat']))));
						}
					}else{
						$tsrsp = 1;
						$tirsp = 1;
						$tik = array_keys($value['ProbeStats']);
						$tsk = array_keys($value['ProbeData']);
						for($i=0; ($i<$tic || $i<$tsc); $i++){
							add("<tr>");
							if($i<$tsc-1){
								add("<td rowspan='$tsrsp'>{$value['ProbeData'][$tsk[$i]]['gene_symbol']} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$value['ProbeData'][$tsk[$i]]['gene_id']}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value['ProbeData'][$tsk[$i]]['gene_symbol']} @ EnsEMBL' /></a></td><td rowspan='$tsrsp'>{$tsk[$i]} ".(($tsk[$i]=="?") ? "" : "<a href='http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;t={$tsk[$i]}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$tsk[$i]} @ EnsEMBL' /></a>")."</td>");
							}
							if($i==$tsc-1){
								add("<td rowspan='".($rsp-$i)."'>{$value['ProbeData'][$tsk[$i]]['gene_symbol']} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$value['ProbeData'][$tsk[$i]]['gene_id']}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value['ProbeData'][$tsk[$i]]['gene_symbol']} @ EnsEMBL' /></a></td><td rowspan='".($rsp-$i)."'>{$tsk[$i]} ".(($tsk[$i]=="?") ? "" : "<a href='http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;t={$tsk[$i]}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$tsk[$i]} @ EnsEMBL' /></a>")."</td>");
							}
							if($i==0){
								add("<td rowspan='$rsp'>$probestring</td><td rowspan='$rsp'>{$value['ProbeStats'][$tik[0]]['chromosome']}</td>");
							}
							if($i<$tic-1){
								add(sprintf("<td rowspan='$tirsp'>{$tik[$i]}</td><td rowspan='$tirsp'>".preg_replace('/([\d\.]+)e\-(\d+)/','\1&times;10<sup>-%d</sup>',minimum($value['ProbeStats'][$tik[0]]['stat']))." ({$value['ProbeStats'][$tik[0]]['stattype']})</td><td rowspan='".$tirsp."'>{$functional['trans-eQTL'][$study]['source']} <a href='{$functional['trans-eQTL'][$study]['link']}' target='_blank'><img src='frontend/img/pm.png' alt='PubMed' title='view in PubMed' /></a></td></tr>", preg_replace('/([\d\.]+)e\-(\d+)/','\2',minimum($value['ProbeStats'][$tik[0]]['stat']))));
							}
							if($i==$tic-1){
								add(sprintf("<td rowspan='".($rsp-$i)."'>{$tik[$i]}</td><td rowspan='".($rsp-$i)."'>".preg_replace('/([\d\.]+)e\-(\d+)/','\1&times;10<sup>-%d</sup>',minimum($value['ProbeStats'][$tik[0]]['stat']))." ({$value['ProbeStats'][$tik[0]]['stattype']})</td><td rowspan='".($rsp-$i)."'>{$functional['trans-eQTL'][$study]['source']} <a href='{$functional['trans-eQTL'][$study]['link']}' target='_blank'><img src='frontend/img/pm.png' alt='PubMed' title='view in PubMed' /></a></td></tr>", preg_replace('/([\d\.]+)e\-(\d+)/','\2',minimum($value['ProbeStats'][$tik[0]]['stat']))));
							}
							add("</tr>");
						}
					}
				}
			}
			add("</table><br/>");
		}
		
		// TFBS
		if(array_key_exists('TFBS_variant', $functional['direct_regulatory_effect'])){
			add("<table class='annotation'><tr><th class='duper' colspan='5'>Transcription factor binding site variation</th></tr>
			<tr><th class='super'>transcription factor</th><th class='super'>binding motif</th><th class='super'>motif position</th><th class='super'>highly informative position</th><th class='super'>score change</th></tr>");
			foreach($functional['direct_regulatory_effect']['TFBS_variant'] as $key => $value){
				add(sprintf("<tr><td>".str_replace(",", ", ", $value['TF'])."</td><td>$key</td><td>{$value['motif_position']}</td><td>{$value['HI_position']}</td><td>%.3f</td></tr>", $value['score_change']));
			}
			add("</table><br/>");
		}
		add("</div>");
	}

	// putative regulatory
	if(array_key_exists('putative_regulatory_effect', $functional) || array_key_exists('variation_proximal_to_gene', $functional)){
		add("<div class='annotation-section'>");
		add("<h2 class='efftype'>Putative effect on regulation</h2>");
		
		// FANTOM5
		if(!empty($functional['putative_regulatory_effect']['regulatory_fantom5'])){
			$ffcp = preg_grep("/FFCP/", array_keys($functional['putative_regulatory_effect']['regulatory_fantom5']));
			$ffce = preg_grep("/FFCE/", array_keys($functional['putative_regulatory_effect']['regulatory_fantom5']));
			
			if(!empty($ffcp)){
				add("<table class='annotation'><tr><th class='duper' colspan='3'>FANTOM5 expressed promoter</th></tr>
				<tr><th class='super'>SNiPA promoter id</th><th class='super'>associated transcript(s)</th><th class='super'>gene</th></tr>");
				foreach($ffcp as $key => $value){
					$cc = count($functional['putative_regulatory_effect']['regulatory_fantom5'][$value]['data']);
					$ckey = array_keys($functional['putative_regulatory_effect']['regulatory_fantom5'][$value]['data']);
					add("<tr><td rowspan='$cc'>$value <a href='{$functional['putative_regulatory_effect']['regulatory_fantom5'][$value]['link']}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='region @ EnsEMBL' /></a></td><td>");
					$tgen = array();
					foreach($functional['putative_regulatory_effect']['regulatory_fantom5'][$value]['data'][$ckey[0]] as $k => $v){
						array_push($tgen, $k." <a href='http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;t={$k}'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$k} @ EnsEMBL' /></a>");
					}
					add(join(", ",$tgen));
					add("</td><td>{$v} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$ckey[0]}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$v} @ EnsEMBL' /></a></td></tr>");
					
					for($i = 1; $i < $cc; $i++){
						add("<tr><td>");
						$tgen = array();
						foreach($functional['putative_regulatory_effect']['regulatory_fantom5'][$value]['data'][$ckey[$i]] as $k => $v){
							array_push($tgen, $k." <a href='http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;t={$k}'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$k} @ EnsEMBL' /></a>");
						}
						add(join(", ",$tgen));
						add("</td><td>{$v} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$ckey[$i]}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$v} @ EnsEMBL' /></a></td></tr>");
					}
				}
				add("</table><br/>");
			}		
			
			if(!empty($ffce)){
				add("<table class='annotation'><tr><th class='duper' colspan='3'>FANTOM5 expressed enhancer</th></tr>
				<tr><th class='super'>SNiPA enhancer id</th><th class='super'>associated transcript(s)</th><th class='super'>gene</th></tr>");
				foreach($ffce as $key => $value){
					$cc = count($functional['putative_regulatory_effect']['regulatory_fantom5'][$value]['data']);
					$ckey = array_keys($functional['putative_regulatory_effect']['regulatory_fantom5'][$value]['data']);
					add("<tr><td rowspan='$cc'>$value <a href='{$functional['putative_regulatory_effect']['regulatory_fantom5'][$value]['link']}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='region @ EnsEMBL' /></a></td><td>");
					$tgen = array();
					foreach($functional['putative_regulatory_effect']['regulatory_fantom5'][$value]['data'][$ckey[0]] as $k => $v){
						array_push($tgen, $k." <a href='http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;t={$k}'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$k} @ EnsEMBL' /></a>");
					}
					add(join(", ",$tgen));
					add("</td><td>{$v} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$ckey[0]}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$v} @ EnsEMBL' /></a></td></tr>");
					
					for($i = 1; $i < $cc; $i++){
						add("<tr><td>");
						$tgen = array();
						foreach($functional['putative_regulatory_effect']['regulatory_fantom5'][$value]['data'][$ckey[$i]] as $k => $v){
							array_push($tgen, $k." <a href='http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;t={$k}'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$k} @ EnsEMBL' /></a>");
						}
						add(join(", ",$tgen));
						add("</td><td>{$v} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$ckey[$i]}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$v} @ EnsEMBL' /></a></td></tr>");
					}
				}
				add("</table><br/>");
			}
		}

		// encode DHS
		if(!empty($functional['putative_regulatory_effect']['regulatory_encode'])){
			$encp = preg_grep("/ENCP/", array_keys($functional['putative_regulatory_effect']['regulatory_encode']));
			$ence = preg_grep("/ENCE/", array_keys($functional['putative_regulatory_effect']['regulatory_encode']));
			
			if(!empty($encp)){
				add("<table class='annotation'><tr><th class='duper' colspan='2'>ENCODE promoter-associated DHS</th></tr>
				<tr><th class='super'>SNiPA promoter id</th><th class='super'>associated gene(s)</th></tr>");
				foreach($encp as $key => $value){
					$cc = count($functional['putative_regulatory_effect']['regulatory_encode'][$value]['data']);
					$ckey = array_keys($functional['putative_regulatory_effect']['regulatory_encode'][$value]['data']);
					add("<tr><td rowspan='$cc'>$value <a href='{$functional['putative_regulatory_effect']['regulatory_encode'][$value]['link']}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='region @ EnsEMBL' /></a></td><td>{$functional['putative_regulatory_effect']['regulatory_encode'][$value]['data'][$ckey[0]]} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$ckey[0]}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$functional['putative_regulatory_effect']['regulatory_encode'][$value]['data'][$ckey[0]]} @ EnsEMBL' /></a></td></tr>");
					for($i = 1; $i < $cc; $i++){
						add("<tr><td>{$functional['putative_regulatory_effect']['regulatory_encode'][$value]['data'][$ckey[$i]]} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$ckey[$i]}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$functional['putative_regulatory_effect']['regulatory_encode'][$value]['data'][$ckey[$i]]} @ EnsEMBL' /></a></td></tr>");
					}
				}
				add("</table><br/>");
			}		
			
			if(!empty($ence)){
				add("<table class='annotation'><tr><th class='duper' colspan='3'>ENCODE promoter-associated distal DHS (Enhancer)</th></tr>
				<tr><th class='super'>SNiPA enhancer id</th><th class='super'>associated SNiPA promoter id</th><th class='super'>associated gene(s)</th></tr>");
				foreach($ence as $key => $value){
					$cc = count($functional['putative_regulatory_effect']['regulatory_encode'][$value]['data']);
					$ckey = array_keys($functional['putative_regulatory_effect']['regulatory_encode'][$value]['data']);
					add("<tr><td rowspan='$cc'>$value <a href='{$functional['putative_regulatory_effect']['regulatory_encode'][$value]['link']}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='region @ EnsEMBL' /></a></td><td>{$ckey[0]}</td><td>");
					$tgen = array();
					foreach($functional['putative_regulatory_effect']['regulatory_encode'][$value]['data'][$ckey[0]] as $k => $v){
						array_push($tgen, $v." <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$k}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$v} @ EnsEMBL' /></a>");
					}
					add(join("<br/>",$tgen));
					add("</td></tr>");
					
					for($i = 1; $i < $cc; $i++){
						add("<tr><td>$ckey[$i]</td><td>");
						$tgen = array();
						foreach($functional['putative_regulatory_effect']['regulatory_encode'][$value]['data'][$ckey[$i]] as $k => $v){
							array_push($tgen, $v." <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$k}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$v} @ EnsEMBL' /></a>");
						}
						add(join("<br/>",$tgen));
						add("</td></tr>");
						add("</td></tr>");
					}
				}
				add("</table><br/>");
			}
		}
		
		// regulatory cluster
		if(!empty($functional['putative_regulatory_effect']['regulatory'])){
			add("<table class='annotation'><tr><th class='duper' colspan='3'>Regulatory feature cluster</th></tr>
			<tr><th class='super'>element id</th><th class='super'>tissue/cell</th><th class='super'>factors</th></tr>");
			foreach($functional['putative_regulatory_effect']['regulatory'] as $value => $key){
				$cc = count($functional['putative_regulatory_effect']['regulatory'][$value]['data']);
				$ckey = array_keys($functional['putative_regulatory_effect']['regulatory'][$value]['data']);
				add("<tr><td rowspan='$cc'>$value  <a href='http://www.ensembl.org/Homo_sapiens/Regulation/Cell_line?rf={$value}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value} @ EnsEMBL' /></a></td><td>{$ckey[0]}</td><td>{$functional['putative_regulatory_effect']['regulatory'][$value]['data'][$ckey[0]]}</td></tr>");
				for($i = 1; $i < $cc; $i++){
					add("<tr><td>$ckey[$i]</td><td>{$functional['putative_regulatory_effect']['regulatory'][$value]['data'][$ckey[$i]]}</td></tr>");
				}
			}
			add("</table><br/>");
		}
		
		// mirTS
		if(!empty($functional['putative_regulatory_effect']['mirTS'])){
			add("<table class='annotation'><tr><th class='duper' colspan='6'>Variation in RISC binding site</th></tr>
			<tr><th class='super'>gene</th><th class='super'>affected transcript(s)</th><th class='super'>targeting miRNA(s)</th></tr>");
			foreach($functional['putative_regulatory_effect']['mirTS'] as $key => $value){
				add("<tr><td>$key <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$value['gene_id']}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$key} @ EnsEMBL' /></a></td>");
				#add TS links
				if(!(is_array($value['transcripts']))){
					$tarts = explode(", ", $value['transcripts']);
					array_walk($tarts, function(&$el){ $el = "{$el} <a href='http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;t={$el}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$el} @ EnsEMBL' /></a>";});
					asort($tarts);
					$str = implode("<br/>",$tarts);
					add("<td>{$str}</td>");
				}else{
					$uniquets = array();
					foreach($value['transcripts'] as $key => $tstr){
						$tarts = explode(", ", $tstr);
						$uniquets = array_merge($uniquets, $tarts);
					}
					$uniquets = array_unique($uniquets);
					array_walk($uniquets, function(&$el){ $el = "{$el} <a href='http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;t={$el}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$el} @ EnsEMBL' /></a>";});
					asort($uniquets);
					$str = implode("<br/>",$uniquets);
					add("<td>{$str}</td>");
				}
				#add miRNA links
				if(!(is_array($value['mirnas']))){
					$tarts = explode(", ", $value['mirnas']);
					array_walk($tarts, function(&$el){ $el = "{$el} <a href='http://mirbase.org/cgi-bin/query.pl?terms={$el}' target='_blank'><img src='frontend/img/mirbase.png' alt='miRBase' title='{$el} @ miRBase' /></a>";});
					asort($tarts);
					$str = implode("<br/>",$tarts);
					add("<td>{$str}</td>");
				}else{
					$uniquets = array();
					foreach($value['mirnas'] as $key => $tstr){
						$tarts = explode(", ", $tstr);
						$uniquets = array_merge($uniquets, $tarts);
					}
					$uniquets = array_unique($uniquets);
					array_walk($uniquets, function(&$el){ $el = "{$el} <a href='http://mirbase.org/cgi-bin/query.pl?terms={$el}' target='_blank'><img src='frontend/img/mirbase.png' alt='miRBase' title='{$el} @ miRBase' /></a>";});
					asort($uniquets);
					$str = implode("<br/>",$uniquets);
					add("<td>{$str}</td>");
				}
			}
			add("</table><br/>");
		}
		
		// variation proximal to gene
		if(array_key_exists('variation_proximal_to_gene', $functional)){
			uasort($functional['variation_proximal_to_gene'], 'sortByGene');
			add("<table class='annotation'><tr><th class='duper' colspan='6'>Variation proximal to gene</th></tr>
			<tr>
			<th class='super'>gene</th>
			<th class='super'>variant type</th>
			<th class='super'>min(distance)</th>
			<th class='super'>transcript</th>
			<th class='super'>RefSeq id</th>
			<th class='super'>protein</th></tr>");
			foreach($functional['variation_proximal_to_gene'] as $value => $key){
				add("<tr>
				<td>{$key['gene_symbol']} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$key['gene_id']}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$key['gene_symbol']} @ EnsEMBL' /></a></td>
				<td>".((is_array($key['effect'])) ? implode(", ",$key['effect']) : $key['effect'])."</td>
				<td>".minimum($key['distance'])."</td>
				<td>{$value} <a href='http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;t={$value}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value} @ EnsEMBL' /></a></td>
				<td>{$key['refseq']}</td>
				<td>".((array_key_exists('ensp', $key)) ? ("{$key['ensp']}".(($key['ensp'] !== "?") ? " <a href='http://www.ensembl.org/Homo_sapiens/Transcript/ProteinSummary?db=core;t={$value}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$key['ensp']} @ EnsEMBL' /></a>" : "" )) : "?"). "</td></tr>");
			}
			add("</table><br/>");
		}
		
		add("</div>");
	}

	//putative transcript
	if(array_key_exists('putative_transcript_effect', $functional)){
		uasort($functional['putative_transcript_effect'], 'sortByGene');
		add("<div class='annotation-section'>");
		add("<h2 class='efftype'>Putative effect on transcript</h2>");
		$efftype = 'putative_transcript_effect';
		$subf = array();
		
		if($subf = getEffectArray($functional,$efftype,'/synonymous/')){
			add("<table class='annotation'><tr><th class='duper' colspan='7'>Synonymous coding variant</th></tr>
			<tr>
			<th class='super'>gene</th>
			<th class='super'>affected transcript</th>
			<th class='super'>RefSeq id</th>
			<th class='super'>protein</th>
			<th class='super'>amino acid</th>
			<th class='super'>codon</th></tr>");
			foreach($subf[$efftype] as $key => $value){
				add("<tr>
				<td>{$value['gene_symbol']} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$value['gene_id']}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value['gene_symbol']} @ EnsEMBL' /></a></td>
				<td>{$key} <a href='http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;t={$key}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$key} @ EnsEMBL' /></a></td>
				<td>{$value['refseq']}</td>
				<td>".((array_key_exists('ensp', $value)) ? ("{$value['ensp']}".(($value['ensp'] !== "?") ? " <a href='http://www.ensembl.org/Homo_sapiens/Transcript/ProteinSummary?db=core;t={$value}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value['ensp']} @ EnsEMBL' /></a>" : "" )) : "?"). "</td>
				<td>{$value['amino']}</td>
				<td>{$value['codon']}</td></tr>");
			}
			add("</table><br/>");
		}
		if($subf = getEffectArray($functional,$efftype,'/intron/')){
			add("<table class='annotation'><tr><th class='duper' colspan='5'>Intron variant</th></tr>
			<tr><th class='super'>gene</th>
			<th class='super'>affected transcript</th>
			<th class='super'>RefSeq id</th>
			<th class='super'>protein</th></tr>");
			foreach($subf[$efftype] as $key => $value){
				add("<tr>
				<td>{$value['gene_symbol']} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$value['gene_id']}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value['gene_symbol']} @ EnsEMBL' /></a></td>
				<td>{$key} <a href='http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;t={$key}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$key} @ EnsEMBL' /></a></td>
				<td>{$value['refseq']}</td>
				<td>".((array_key_exists('ensp', $value)) ? ("{$value['ensp']}".(($value['ensp'] !== "?") ? " <a href='http://www.ensembl.org/Homo_sapiens/Transcript/ProteinSummary?db=core;t={$value}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value['ensp']} @ EnsEMBL' /></a>" : "" )) : "?"). "</td>
				</tr>");
			}
			add("</table><br/>");
		}
		if($subf = getEffectArray($functional,$efftype,'/3 prime/')){
			add("<table class='annotation'><tr><th class='duper' colspan='5'>3'-UTR variant</th></tr>
			<tr>
			<th class='super'>gene</th>
			<th class='super'>affected transcript</th>
			<th class='super'>RefSeq id</th>
			<th class='super'>protein</th></tr>");
			foreach($subf[$efftype] as $key => $value){
				add("<tr>
				<td>{$value['gene_symbol']} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$value['gene_id']}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value['gene_symbol']} @ EnsEMBL' /></a></td>
				<td>{$key} <a href='http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;t={$key}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$key} @ EnsEMBL' /></a></td>
				<td>{$value['refseq']}</td>
				<td>".((array_key_exists('ensp', $value)) ? ("{$value['ensp']}".(($value['ensp'] !== "?") ? " <a href='http://www.ensembl.org/Homo_sapiens/Transcript/ProteinSummary?db=core;t={$value}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value['ensp']} @ EnsEMBL' /></a>" : "" )) : "?"). "</td>
				</tr>");
			}
			add("</table><br/>");
		}
		if($subf = getEffectArray($functional,$efftype,'/5 prime/')){
			add("<table class='annotation'><tr><th class='duper' colspan='5'>5'-UTR variant</th></tr>
			<tr>
			<th class='super'>gene</th>
			<th class='super'>affected transcript</th>
			<th class='super'>RefSeq id</th>
			<th class='super'>protein</th></tr>");
			foreach($subf[$efftype] as $key => $value){
				add("<tr>
				<td>{$value['gene_symbol']} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$value['gene_id']}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value['gene_symbol']} @ EnsEMBL' /></a></td>
				<td>{$key} <a href='http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;t={$key}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$key} @ EnsEMBL' /></a></td>
				<td>{$value['refseq']}</td>
				<td>".((array_key_exists('ensp', $value)) ? ("{$value['ensp']}".(($value['ensp'] !== "?") ? " <a href='http://www.ensembl.org/Homo_sapiens/Transcript/ProteinSummary?db=core;t={$value}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value['ensp']} @ EnsEMBL' /></a>" : "" )) : "?"). "</td>
				</tr>");
			}
			add("</table><br/>");
		}
		if($subf = getEffectArray($functional,$efftype,'/non coding exon/')){
			add("<table class='annotation'><tr><th class='duper' colspan='4'>Non-coding exon variant</th></tr>
			<th class='super'>gene</th>
			<th class='super'>affected transcript</th>
			<th class='super'>RefSeq id</th>
			<th class='super'>protein</th></tr>");
			foreach($subf[$efftype] as $key => $value){
				add("<tr>
				<td>{$value['gene_symbol']} <a href='http://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g={$value['gene_id']}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value['gene_symbol']} @ EnsEMBL' /></a></td>
				<td>{$key} <a href='http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;t={$key}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$key} @ EnsEMBL' /></a></td>
				<td>{$value['refseq']}</td>
				<td>".((array_key_exists('ensp', $value)) ? ("{$value['ensp']}".(($value['ensp'] !== "?") ? " <a href='http://www.ensembl.org/Homo_sapiens/Transcript/ProteinSummary?db=core;t={$value}' target='_blank'><img src='frontend/img/ens.png' alt='EnsEMBL' title='{$value['ensp']} @ EnsEMBL' /></a>" : "" )) : "?"). "</td>
				</tr>");
			}
			add("</table><br/>");
		}
		add("</div>");
	}
}
// minimum function that distinguishes between arrays and scalars
function minimum($mixed){
	return ((is_array($mixed)) ? min($mixed) : $mixed);
}

// function for retrieval of sub-arrays
function getEffectArray($array, $effectType, $pattern){
	$result = array();
	foreach($array[$effectType] as $key => $value){
		if(preg_match($pattern, $value['effect'])){
			$result[$effectType][$key] = $value;
		}
	}
	if(empty($result)){
		return false;
	}
	return $result;
}

// function for retrieval of direct TS sub-arrays
function getDTSEffectArray($array){
	$effectType = 'direct_transcript_effect';
	$result = array();
	foreach($array[$effectType] as $key => $value){
		if(preg_match('/miRNA/', $value['effect'])){
			$result['miRNA'][$key] = $value;
		}else if(preg_match('/splice.+variant/', $value['effect'])){
			$result['splice'][$key] = $value;
		}else{
			$result[$effectType][$key] = $value;
		}
	}
	if(empty($result)){
		return false;
	}
	return $result;
}
?>
